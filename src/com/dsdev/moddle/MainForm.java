package com.dsdev.moddle;

import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.text.SimpleAttributeSet;
import org.apache.commons.io.FileUtils;

/**
 * The main GUI.
 *
 * @author Greenlock28
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        UsernameField = new javax.swing.JTextField();
        ModpackComboBox = new javax.swing.JComboBox();
        PasswordField = new javax.swing.JPasswordField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ModpackDescriptionPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Moddle Launcher");
        setMinimumSize(new java.awt.Dimension(800, 450));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Modpack:");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        ModpackComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModpackComboBoxActionPerformed(evt);
            }
        });

        ModpackDescriptionPane.setEditable(false);
        ModpackDescriptionPane.setBackground(new java.awt.Color(240, 240, 240));
        ModpackDescriptionPane.setBorder(null);
        jScrollPane3.setViewportView(ModpackDescriptionPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(UsernameField)
                    .addComponent(PasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ModpackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(UsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(ModpackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            FileUtils.writeStringToFile(Util.getFile("./lastlogin.dat"), UsernameField.getText() + "\n" + PasswordField.getText() + "\n" + ModpackComboBox.getSelectedItem().toString());
        } catch (Exception ex) { }
            
        Logger.info("Starting...");
        
        Logger.info("Logging in...");
        MinecraftLogin login = new MinecraftLogin();
        login.doLogin(UsernameField.getText(), PasswordField.getText());
        
        LaunchArgs launchArgs = new LaunchArgs();

        Logger.info("Invoking pack builder...");
        Modpack pack = new Modpack(ModpackComboBox.getSelectedItem().toString());
        pack.build(launchArgs, login);

        Logger.info("Preparing to launch modpack...");
        pack.run(launchArgs, login);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {

            Logger.info("Startup", "Centering...");
            this.setLocationRelativeTo(null);

            Logger.info("Startup", "Loading icon...");
            this.setIconImage((new ImageIcon(this.getClass().getResource("icon_mb.png"))).getImage());

            Logger.info("Startup", "Clearing temporary file cache...");
            if (Util.getFile("./tmp").exists()) {
                FileUtils.deleteDirectory(Util.getFile("./tmp"));
            }
            
            Logger.info("Startup", "Loading modpacks...");
            DefaultListModel model = new DefaultListModel();
            for (File f : Util.getFile("./packs").listFiles()) {
                if (f.getName().endsWith(".zip")) {
                    if (!Util.getFile("./tmp/launcher/" + f.getName().replace(".zip", "") + "/pack.png").exists()) {
                        if (!Util.decompressZipfile(f.getCanonicalPath(), "./tmp/launcher/" + f.getName().replace(".zip", ""))) {
                            Logger.warning("Startup", "Failed to load pack image for " + f.getName().replace(".zip", ""));
                        }
                    }
                    ModpackComboBox.addItem(f.getName().replace(".zip", ""));
                }
            }
            
            Logger.info("Startup", "Loading last login info...");
            if (Util.getFile("./lastlogin.dat").exists()) {
                String lastlogin = FileUtils.readFileToString(Util.getFile("./lastlogin.dat"));
                String[] lastloginLines = lastlogin.split("\n");
                UsernameField.setText(lastloginLines[0]);
                PasswordField.setText(lastloginLines[1]);
                ModpackComboBox.setSelectedItem(lastloginLines[2]);
            }
            
            
            String selectedPack = ModpackComboBox.getSelectedItem().toString();
            Logger.info("Startup", "Loading Modpack description pane content (" + selectedPack + ")...");
            ModpackDescriptionPane.setText("");
            ModpackDescriptionPane.insertIcon(new ImageIcon("./tmp/launcher/" + selectedPack + "/pack.png"));
            SimpleAttributeSet keyWord = new SimpleAttributeSet();
            //StyleConstants.setForeground(keyWord, Color.RED);
            //StyleConstants.setBackground(keyWord, Color.YELLOW);
            //StyleConstants.setBold(keyWord, true);
            ModpackDescriptionPane.getStyledDocument().insertString(ModpackDescriptionPane.getStyledDocument().getLength(),
                    "\n\n" + FileUtils.readFileToString(Util.getFile("./tmp/launcher/" + selectedPack + "/pack.txt")),
                    keyWord);
            ModpackDescriptionPane.setCaretPosition(0);
            
            Logger.info("Startup", "Finished loading.");

        } catch (Exception ex) {
            Logger.error("Startup", ex.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void ModpackComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModpackComboBoxActionPerformed
        try {

            String selectedPack = ModpackComboBox.getSelectedItem().toString();
            Logger.info("Startup", "Loading Modpack description pane content (" + selectedPack + ")...");
            ModpackDescriptionPane.setText("");
            ModpackDescriptionPane.insertIcon(new ImageIcon("./tmp/launcher/" + selectedPack + "/pack.png"));
            SimpleAttributeSet keyWord = new SimpleAttributeSet();
            ModpackDescriptionPane.getStyledDocument().insertString(ModpackDescriptionPane.getStyledDocument().getLength(),
                    "\n\n" + FileUtils.readFileToString(Util.getFile("./tmp/launcher/" + selectedPack + "/pack.txt")),
                    keyWord);
            ModpackDescriptionPane.setCaretPosition(0);
            
        } catch (Exception ex) {
            Logger.error("GUI", ex.getMessage());
        }
    }//GEN-LAST:event_ModpackComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
             if ("Nimbus".equals(info.getName())) {
             javax.swing.UIManager.setLookAndFeel(info.getClassName());
             break;
             }
             }*/
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ModpackComboBox;
    private javax.swing.JTextPane ModpackDescriptionPane;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JTextField UsernameField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
